{"version":3,"sources":["../../CodeHunt/frontend/codehunt-client/src/Login.jsx","../../CodeHunt/frontend/codehunt-client/src/Register.jsx","../../CodeHunt/frontend/codehunt-client/src/Exercises.jsx","../../CodeHunt/frontend/codehunt-client/src/App.js","../../CodeHunt/frontend/codehunt-client/src/reportWebVitals.js","../../CodeHunt/frontend/codehunt-client/src/index.js"],"names":["Login","navigate","useNavigate","email","setEmail","useState","password","setPassword","mensaje","setMensaje","React","createElement","Fragment","style","backgroundImage","backgroundSize","height","backgroundRepeat","backgroundPosition","paddingTop","paddingLeft","opacity","color","fontSize","className","width","backgroundColor","padding","borderRadius","onSubmit","async","e","preventDefault","token","axios","post","data","localStorage","setItem","error","type","required","value","onChange","target","placeholder","Link","to","Register","name","setName","src","alt","status","setTimeout","console","href","Exercises","userCode1","setUserCode1","userCode2","setUserCode2","result1","setResult1","result2","setResult2","runCode","code","exerciseNumber","log","simulatedResult","event","onClick","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d37da94d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!email || !password) {\r\n      setMensaje(\"❌ Por favor completa todos los campos.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5297/api/Auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      const token = response.data.token;\r\n      localStorage.setItem(\"token\", token);\r\n\r\n      setMensaje(\"✅ Inicio de sesión exitoso\");\r\n      navigate(\"/ejercicios\");\r\n    } catch (error) {\r\n      setMensaje(\"❌ Credenciales inválidas o error de conexión\");\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n\r\n      <div style={{\r\n        backgroundImage: \"url('/logo.png')\",\r\n        backgroundSize: \"cover\",\r\n        height: \"1000px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        paddingTop: \"10%\",\r\n        paddingLeft: \"40%\",\r\n        opacity: \"1\",\r\n        color: \"gray\",\r\n        fontSize: \"20px\"\r\n      }}>\r\n        <h1 className=\"text-3xl font-bold text-gray-800\">\r\n          <span className=\"text-gray-800\">Code</span>Hunt\r\n        </h1>\r\n        <p className=\"text-sm text-gray-500\">Bienvenido, inicia sesión</p>\r\n\r\n\r\n        <form style={{\r\n          width: \"200px\",\r\n          backgroundColor: \"blue\",\r\n          padding: \"30px\",\r\n          borderRadius:\"10px\",\r\n          opacity: \"0.3\",\r\n          color: \"gray\",\r\n          fontSize: \"20px\"\r\n        }}\r\n          onSubmit={handleSubmit}>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Correo electrónico\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              required\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500 focus:outline-none\"\r\n              placeholder=\"correo@codehunt.com\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Contraseña\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500 focus:outline-none\"\r\n              placeholder=\"••••••••\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-2 rounded-lg transition duration-200\"\r\n          >\r\n            Iniciar sesión\r\n          </button>\r\n        </form>\r\n\r\n        {mensaje && (\r\n          <p className=\"text-center text-sm text-red-600 mt-4\">{mensaje}</p>\r\n        )}\r\n\r\n        <div className=\"mt-6 border-t pt-4 text-center font-medium text-gray-600\">\r\n          ¿No tienes cuenta?{\" \"}\r\n          <Link to=\"/register\" className=\"text-indigo-600 hover:underline font-medium\">\r\n            Regístrate\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Register() {\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !email || !password) {\r\n      setMensaje(\"❌ Por favor completa todos los campos.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5297/api/Auth/register\", {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setMensaje(\"✅ Registro exitoso. Serás redirigido al login...\");\r\n        setTimeout(() => navigate(\"/\"), 1500);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMensaje(\"❌ El correo ya está registrado o hubo un error.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 p-4\">\r\n      <div className=\"bg-white shadow-2xl rounded-2xl p-8 w-full max-w-md\">\r\n\r\n        {/* Logo */}\r\n        <img src=\"/logo.png\" alt=\"CodeHunt Logo\" className=\"w-28 mx-auto mb-4 drop-shadow-lg\" />\r\n\r\n        {/* Título */}\r\n        <h2 className=\"text-3xl font-extrabold text-center text-gray-800 mb-6\">\r\n          Crear cuenta en <span className=\"text-indigo-600\">CodeHunt</span>\r\n        </h2>\r\n\r\n        {/* Formulario */}\r\n        <form className=\"space-y-5\" onSubmit={handleRegister}>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Nombre completo</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 transition\"\r\n              placeholder=\"Juan Pérez\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Correo electrónico</label>\r\n            <input\r\n              type=\"email\"\r\n              required\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 transition\"\r\n              placeholder=\"correo@codehunt.com\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Contraseña</label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 transition\"\r\n              placeholder=\"••••••••\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-indigo-600 text-white py-2 rounded-lg hover:bg-indigo-700 transition-all duration-200 font-medium shadow-md\"\r\n          >\r\n            Registrarse\r\n          </button>\r\n        </form>\r\n\r\n        {mensaje && (\r\n          <p className=\"mt-4 text-center text-sm text-red-600\">{mensaje}</p>\r\n        )}\r\n\r\n        {/* Enlace para volver al login */}\r\n        <p className=\"mt-4 text-center text-sm text-gray-500\">\r\n          ¿Ya tienes cuenta?{\" \"}\r\n          <a href=\"/\" className=\"text-indigo-600 hover:underline font-medium\">\r\n            Inicia sesión\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Exercises() {\r\n  const [userCode1, setUserCode1] = useState(`def suma(a, b):\\n    return a + b`);\r\n  const [userCode2, setUserCode2] = useState(`def es_par(n):\\n    return n % 2 == 0`);\r\n  const [result1, setResult1] = useState(\"\");\r\n  const [result2, setResult2] = useState(\"\");\r\n\r\n  const handleCodeChange1 = (event) => {\r\n    setUserCode1(event.target.value);\r\n  };\r\n\r\n  const handleCodeChange2 = (event) => {\r\n    setUserCode2(event.target.value);\r\n  };\r\n\r\n  const runCode = (code, exerciseNumber) => {\r\n    // **Simulación de ejecución de código (aquí iría tu lógica real)**\r\n    console.log(`Ejecutando código para el Ejercicio ${exerciseNumber}:`, code);\r\n    const simulatedResult = `¡Resultado simulado para el Ejercicio ${exerciseNumber}! 🎉`;\r\n    if (exerciseNumber === 1) {\r\n      setResult1(simulatedResult);\r\n    } else if (exerciseNumber === 2) {\r\n      setResult2(simulatedResult);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-300 to-pink-300 py-16\">\r\n      <div className=\"container mx-auto px-6 sm:px-8 lg:px-12\">\r\n        <h1 className=\"text-5xl font-extrabold text-center text-indigo-800 mb-16 animate-pulse drop-shadow-lg\">\r\n          ✨ ¡A Programar se Ha Dicho! ✨\r\n        </h1>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-10 max-w-5xl mx-auto\">\r\n          {/* Ejercicio 1 */}\r\n          <div className=\"bg-white shadow-xl rounded-2xl overflow-hidden hover:shadow-2xl transition duration-300\">\r\n            <div className=\"p-10\">\r\n              <h2 className=\"text-2xl font-bold text-purple-700 mb-6 flex items-center justify-center sm:justify-start\">\r\n                <span className=\"mr-4 text-purple-500 text-xl font-semibold\">1.</span> Suma de dos números\r\n              </h2>\r\n              <p className=\"text-lg text-gray-800 mb-6 text-center sm:text-left\">\r\n                ¡Comencemos con algo sencillo! Escribe tu código Python aquí para sumar esos dos numeritos. 👇\r\n              </p>\r\n              <textarea\r\n                className=\"w-full h-40 p-4 bg-indigo-50 rounded-md text-sm text-gray-800 font-mono focus:outline-none focus:ring-2 focus:ring-purple-400\"\r\n                value={userCode1}\r\n                onChange={handleCodeChange1}\r\n              />\r\n              <div className=\"flex justify-center sm:justify-start mt-6\">\r\n                <button\r\n                  className=\"bg-purple-600 hover:bg-purple-800 text-white font-bold py-3 px-6 rounded-full focus:outline-none focus:ring-4 focus:ring-purple-300 active:bg-purple-900 transition duration-200\"\r\n                  onClick={() => runCode(userCode1, 1)}\r\n                >\r\n                  ¡A Sumar! ➕\r\n                </button>\r\n                {result1 && (\r\n                  <div className=\"ml-4 text-green-600 font-semibold text-lg flex items-center\">\r\n                    ✅ {result1}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-purple-100 py-4 px-10 text-sm text-purple-700 text-center sm:text-left\">\r\n              💡 <span className=\"font-bold\">Consejo rápido:</span> El operador `+` es tu mejor amigo aquí.\r\n            </div>\r\n          </div>\r\n\r\n          {/* Ejercicio 2 */}\r\n          <div className=\"bg-white shadow-xl rounded-2xl overflow-hidden hover:shadow-2xl transition duration-300\">\r\n            <div className=\"p-10\">\r\n              <h2 className=\"text-2xl font-bold text-pink-700 mb-6 flex items-center justify-center sm:justify-start\">\r\n                <span className=\"mr-4 text-pink-500 text-xl font-semibold\">2.</span> ¿Es un número par? 🤔\r\n              </h2>\r\n              <p className=\"text-lg text-gray-800 mb-6 text-center sm:text-left\">\r\n                ¡Un pequeño desafío más! Determina si el número que te den es par o impar con tu magia Python. ✨\r\n              </p>\r\n              <textarea\r\n                className=\"w-full h-40 p-4 bg-pink-50 rounded-md text-sm text-gray-800 font-mono focus:outline-none focus:ring-2 focus:ring-pink-400\"\r\n                value={userCode2}\r\n                onChange={handleCodeChange2}\r\n              />\r\n              <div className=\"flex justify-center sm:justify-start mt-6\">\r\n                <button\r\n                  className=\"bg-pink-600 hover:bg-pink-800 text-white font-bold py-3 px-6 rounded-full focus:outline-none focus:ring-4 focus:ring-pink-300 active:bg-pink-900 transition duration-200\"\r\n                  onClick={() => runCode(userCode2, 2)}\r\n                >\r\n                  ¡A Comprobar! 🔍\r\n                </button>\r\n                {result2 && (\r\n                  <div className=\"ml-4 text-green-600 font-semibold text-lg flex items-center\">\r\n                    ✅ {result2}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-pink-100 py-4 px-10 text-sm text-pink-700 text-center sm:text-left\">\r\n              💡 <span className=\"font-bold\">Recuerda:</span> El operador `%` te dirá el resto de una división. 😉\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Exercises;","import React from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport Exercises from \"./Exercises\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/ejercicios\" element={<Exercises />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}